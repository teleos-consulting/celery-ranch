name: Publish Package

on:
  push:
    branches: [ main, master ]
    tags:
      - 'v*'
  release:
    types: [created]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e ".[dev]"
    
    - name: Run tests
      run: |
        pytest

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'release' || (github.event_name == 'push' && (github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/v')))
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install setuptools wheel twine build packaging
    
    - name: Extract version
      id: extract_version
      run: |
        if [[ $GITHUB_REF == refs/tags/v* ]]; then
          TAG=${GITHUB_REF#refs/tags/v}
          echo "VERSION=$TAG" >> $GITHUB_OUTPUT
          echo "Tag version: $TAG"
        else
          VERSION=$(python -c "from setuptools import setup; setup()" --version 2>/dev/null)
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
          echo "Package version: $VERSION"
        fi
    
    - name: Build and package
      run: |
        python -m build
    
    - name: Create GitHub Release
      id: create_release
      if: startsWith(github.ref, 'refs/tags/v')
      uses: softprops/action-gh-release@v1
      with:
        files: |
          dist/*.whl
          dist/*.tar.gz
        name: Release ${{ steps.extract_version.outputs.VERSION }}
        draft: false
        prerelease: false
        generate_release_notes: true
    
    - name: Publish to PyPI for releases
      if: (github.event_name == 'release' || startsWith(github.ref, 'refs/tags/v')) && env.PYPI_ENABLED == 'true'
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        user: __token__
        password: ${{ secrets.PYPI_API_TOKEN }}
        skip_existing: true
      env:
        PYPI_ENABLED: ${{ secrets.PYPI_ENABLED || 'false' }}
    
    - name: Publish to PyPI for version bumps
      if: github.event_name == 'push' && !startsWith(github.ref, 'refs/tags/v') && env.PYPI_ENABLED == 'true'
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        user: __token__
        password: ${{ secrets.PYPI_API_TOKEN }}
        skip_existing: true
      env:
        PYPI_ENABLED: ${{ secrets.PYPI_ENABLED || 'false' }}